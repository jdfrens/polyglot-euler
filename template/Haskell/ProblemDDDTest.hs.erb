module Main where

import Test.HUnit
import System
import Problem<%= number %>

% functions.each do |function|
<%= function.camel_case %>Tests = TestList [
% tests(function).each do |expected, computation|
  TestCase (<%= expected %> @=? <%= function.camel_case %> <%= computation %>),
% end
  TestCase (1 @=? 1)
  ]
  
%end
tests = TestList [
% functions.each do |function|
	TestLabel "testing <%= function.camel_case %>" <%= function.camel_case %>Tests,
% end
	TestCase (1 @=? 1)
	]
	
main = runTestTT tests >>= checkTests
  where
    checkTests counts = case counts of
    	Counts _ _ errors failures ->
    		if (errors + failures > 0)
    		then exitFailure
    		else (exitWith ExitSuccess)
